'''
题目描述
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
题目解析
建立一个256位大小的整型数组 freg ，用来建立字符和其出现位置之间的映射。

维护一个滑动窗口，窗口内的都是没有重复的字符，去尽可能的扩大窗口的大小，窗口不停的向右滑动。

（1）如果当前遍历到的字符从未出现过，那么直接扩大右边界；
（2）如果当前遍历到的字符出现过，则缩小窗口（左边索引向右移动），然后继续观察当前遍历到的字符；
（3）重复（1）（2），直到左边索引无法再移动；
（4）维护一个结果res，每次用出现过的窗口大小来更新结果 res，最后返回 res 获取结果。
'''

def calc(input:str)->int:
    l=0
    r=-1
    res=0
    temp=[0 for _ in range(256)]
    while l < len(input):
        # 窗口未到右边界且r+1的位置在窗口中无相同字符
        if r+1 < len(input) and temp[ord(input[r+1])] == 0:
            r+=1
            temp[ord(input[r])]+=1
        # r到头 or temp[ord(input[r+1])] == 1即 r+1 的位置仍然与窗口内的字符有相同的
        # 这时则保持窗口r位置不动，l+=1向右移动窗口左边界直到找到窗口内重复的那个字符
        else:
            temp[ord(input[l])]-=1
            l+=1
        res=max(res,r-l+1)
    return res

if __name__ == "__main__":
    input='abcbe'
    print(calc(input))